previous Permutaion
Given a positive integer n, find the greatest integer less than n and has the same digits

1 2 5 5 2 3 4 4 
1 2 5 4 2 3 4 5 
1 2 5 4 5 4 3 2 

1. from last, find the first element that doesnot follow descending order
2. from last to i (not including i), find the first largest one which is < inpu[i], and swap 
3. then reverse from last to i 

solution: 
public int[] perviousPermutation(int[] input) {
    // sanity check 
    if (intput == null || input.length = 0) {
        return new int[]; 
    }
    
    // step1 
    int i = intput.length - 1; 
    while (i >=1 && input[i] >= input[i-1] {
        i--;  
    }
    if (i == 0) {
        return input; 
    }
    
    // step2
    int j = input.length - 1; 
    while (input[i-1] = input[j]) {
        j--;
    }
    swap(i-1, j, input); 
    //step3
    reverse(input, i, input.length - 1);
}

private void swap(int left, int right, int[] array) {
  int temp = array[left];
  array[left] = array[right];
  array[right] = temp;
}

private void reverse(int[] array, int left, int right) {
    while (left <= right) {
        swap(left, right, array); 
        left++;
        right--; 
    }
}

